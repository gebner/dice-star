/* Automatically generated by the Kremlin tool */



#ifndef __L0_X509_Extension_H
#define __L0_X509_Extension_H

#if defined(__cplusplus)
extern "C" {
#endif

#include "kremlin/internal/types.h"
#include "kremlin/lowstar_endianness.h"
#include "LowStar_Printf.h"
#include <string.h>


#include "ASN1_X509.h"
#include "L0_X509_CompositeDeviceID.h"

typedef struct l0_extension_payload_t_s
{
  oid_t x509_extID_l0;
  bool x509_extCritical_l0;
  compositeDeviceID_payload_t x509_extValue_l0;
}
l0_extension_payload_t;

typedef l0_extension_payload_t l0_extension_t;

uint32_t len_of_l0_extension_payload(int32_t version);

uint32_t len_of_l0_extension(int32_t version);

uint32_t
serialize32_l0_extension_payload_backwards(
  l0_extension_payload_t x,
  uint8_t *input,
  uint32_t pos
);

uint32_t
serialize32_l0_extension_backwards(l0_extension_payload_t x, uint8_t *b, uint32_t pos);

l0_extension_payload_t
x509_get_l0_extension(int32_t version, FStar_Bytes_bytes fwid, FStar_Bytes_bytes deviceIDPub);

#if defined(__cplusplus)
}
#endif

#define __L0_X509_Extension_H_DEFINED
#endif
