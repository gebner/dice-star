/* Automatically generated by the Kremlin tool */



#ifndef __L0_Impl_Crypto_H
#define __L0_Impl_Crypto_H

#if defined(__cplusplus)
extern "C" {
#endif

#include "kremlin/internal/types.h"
#include "kremlin/lowstar_endianness.h"
#include "LowStar_Printf.h"
#include <string.h>


#include "L0_Declassify.h"
#include "Hacl_Lib.h"

void
derive_key_pair(
  uint8_t *public_key,
  uint8_t *private_key,
  uint32_t ikm_len,
  uint8_t *ikm,
  uint32_t lbl_len,
  uint8_t *lbl
);

void
derive_DeviceID(
  uint8_t *deviceID_pub,
  uint8_t *deviceID_priv,
  uint8_t *cdi,
  uint32_t l0_label_DeviceID_len,
  uint8_t *l0_label_DeviceID
);

void
derive_AliasKey(
  uint8_t *aliasKey_pub,
  uint8_t *aliasKey_priv,
  uint8_t *cdi,
  uint8_t *fwid,
  uint32_t l0_label_AliasKey_len,
  uint8_t *l0_label_AliasKey
);

void derive_authKeyID(uint8_t *authKeyID, uint8_t *deviceIDPub);

void
l0_core_step1(
  uint8_t *cdi,
  uint8_t *fwid,
  uint32_t deviceID_label_len,
  uint8_t *deviceID_label,
  uint32_t aliasKey_label_len,
  uint8_t *aliasKey_label,
  uint8_t *deviceID_pub,
  uint8_t *deviceID_priv,
  uint8_t *aliasKey_pub,
  uint8_t *aliasKey_priv,
  uint8_t *authKeyID
);

#if defined(__cplusplus)
}
#endif

#define __L0_Impl_Crypto_H_DEFINED
#endif
