/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: krml ./src/Minimal.DICE.fst -cc clang -no-prefix Hacl.Frodo.Random -bundle Hacl.Spec.*,Spec.*[rename=Hacl_Spec] -bundle Lib.*[rename=Hacl_Lib] -drop Lib.IntVector.Intrinsics -fparentheses -fno-shadow -fcurly-braces -bundle LowStar.* -bundle Prims,C.Failure,C,C.String,C.Loops,Spec.Loops,C.Endianness,FStar.*[rename=Hacl_Kremlib] -bundle Meta.* -minimal -add-include "kremlin/internal/types.h" -add-include "kremlin/lowstar_endianness.h" -add-include <string.h> -drop WasmSupport -tmpdir ./out -I ./src -add-include "kremlin/internal/compat.h" -I /home/zhetao/Sources/kremlin/include -I /home/zhetao/Sources/kremlin/kremlib/dist/generic -I /home/zhetao/Sources/hacl-star/specs -I /home/zhetao/Sources/hacl-star/specs/lemmas -I /home/zhetao/Sources/hacl-star/code/hash -I /home/zhetao/Sources/hacl-star/code/hkdf -I /home/zhetao/Sources/hacl-star/code/hmac -I /home/zhetao/Sources/hacl-star/code/curve25519 -I /home/zhetao/Sources/hacl-star/code/ed25519 -I /home/zhetao/Sources/hacl-star/lib -I /home/zhetao/Sources/hacl-star/providers/evercrypt -I /home/zhetao/Sources/kremlin/kremlib -o dice.exe
  F* version: 9c3c5d28
  KreMLin version: fe104c22
 */
#include "kremlin/internal/types.h"
#include "kremlin/lowstar_endianness.h"
#include <string.h>
#include "kremlin/internal/compat.h"

#ifndef __Minimal_Hardware_H
#define __Minimal_Hardware_H

#include "Hacl_Spec.h"


typedef Spec_Hash_Definitions_hash_alg Minimal_Hardware_dice_alg;

extern Spec_Hash_Definitions_hash_alg Minimal_Hardware_alg;

extern uint32_t Minimal_Hardware_digest_len;

typedef Lib_IntTypes_sec_int_t____ *Minimal_Hardware_digest_t;

extern uint32_t Minimal_Hardware_uds_len;

extern uint32_t Minimal_Hardware_cdi_len;

typedef uint32_t Minimal_Hardware_riot_size_t;

extern void **Minimal_Hardware_local_state;

extern Lib_IntTypes_sec_int_t____ *Minimal_Hardware_get_uds(Minimal_Hardware_state st);

extern Lib_IntTypes_sec_int_t____ *Minimal_Hardware_get_cdi(Minimal_Hardware_state st);

extern Minimal_Hardware_state
Minimal_Hardware_initialize(Lib_IntTypes_sec_int_t____ *riot_binary);

extern void Minimal_Hardware_unset_uds(Minimal_Hardware_state st);

extern void Minimal_Hardware_disable_uds(Minimal_Hardware_state st);

#define __Minimal_Hardware_H_DEFINED
#endif
