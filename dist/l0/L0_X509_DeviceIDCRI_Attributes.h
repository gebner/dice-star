/* Automatically generated by the Kremlin tool */



#ifndef __L0_X509_DeviceIDCRI_Attributes_H
#define __L0_X509_DeviceIDCRI_Attributes_H

#if defined(__cplusplus)
extern "C" {
#endif

#include "kremlin/internal/types.h"
#include "kremlin/lowstar_endianness.h"
#include "LowStar_Printf.h"
#include <string.h>


#include "ASN1_X509.h"

typedef K___ASN1_Base_oid_t_int32_t deviceIDCRI_attributes_extensionRequest_payload_t;

typedef struct
K___ASN1_Base_oid_t_L0_X509_DeviceIDCRI_Attributes_deviceIDCRI_attributes_extensionRequest_payload_t_s
{
  oid_t fst;
  K___ASN1_Base_oid_t_int32_t snd;
}
K___ASN1_Base_oid_t_L0_X509_DeviceIDCRI_Attributes_deviceIDCRI_attributes_extensionRequest_payload_t;

typedef K___ASN1_Base_oid_t_L0_X509_DeviceIDCRI_Attributes_deviceIDCRI_attributes_extensionRequest_payload_t
deviceIDCRI_attributes_t;

uint32_t
serialize32_deviceIDCRI_attributes_extensionRequest_payload_backwards(
  K___ASN1_Base_oid_t_int32_t x,
  uint8_t *input,
  uint32_t pos
);

uint32_t
serialize32_deviceIDCRI_attributes_backwards(
  K___ASN1_Base_oid_t_L0_X509_DeviceIDCRI_Attributes_deviceIDCRI_attributes_extensionRequest_payload_t
  x,
  uint8_t *b,
  uint32_t pos
);

K___ASN1_Base_oid_t_L0_X509_DeviceIDCRI_Attributes_deviceIDCRI_attributes_extensionRequest_payload_t
x509_get_deviceIDCRI_attributes(int32_t ku);

#if defined(__cplusplus)
}
#endif

#define __L0_X509_DeviceIDCRI_Attributes_H_DEFINED
#endif
