/* Automatically generated by the Kremlin tool */



#ifndef __L0_Core_H
#define __L0_Core_H

#if defined(__cplusplus)
extern "C" {
#endif

#include "L0_X509_DeviceIDCRI.h"
#include "L0_X509_Base.h"
#include "L0_X509_AliasKeyTBS.h"
#include "L0_Impl_Crypto.h"
#include "L0_Impl_Certificate.h"
#include "L0_Declassify.h"
#include "ASN1_X509.h"
#include "krml/internal/types.h"
#include "krml/lowstar_endianness.h"
#include "LowStar_Printf.h"
#include <string.h>

typedef void *deviceIDCRI_pre;

typedef void *deviceIDCSR_pre;

typedef void *aliasKeyCRT_pre;

typedef void *l0_pre;

typedef void *aliasKey_post;

typedef void *deviceIDCSR_post;

typedef void *aliasKeyCRT_post;

typedef void *l0_aux_post;

void
l0_aux(
  uint8_t *cdi,
  uint8_t *fwid,
  uint32_t deviceID_label_len,
  uint8_t *deviceID_label,
  uint32_t aliasKey_label_len,
  uint8_t *aliasKey_label,
  deviceIDCSR_ingredients_t deviceIDCSR_ingredients,
  aliasKeyCRT_ingredients_t aliasKeyCRT_ingredients,
  uint8_t *deviceID_pub,
  uint8_t *aliasKey_pub,
  uint8_t *aliasKey_priv,
  uint32_t deviceIDCSR_len,
  uint8_t *deviceIDCSR_buf,
  uint32_t aliasKeyCRT_len,
  uint8_t *aliasKeyCRT_buf
);

typedef void *l0_post;

void
l0(
  uint8_t *cdi,
  uint8_t *fwid,
  uint32_t deviceID_label_len,
  uint8_t *deviceID_label,
  uint32_t aliasKey_label_len,
  uint8_t *aliasKey_label,
  deviceIDCSR_ingredients_t deviceIDCSR_ingredients,
  aliasKeyCRT_ingredients_t aliasKeyCRT_ingredients,
  uint8_t *deviceID_pub,
  uint8_t *aliasKey_pub,
  uint8_t *aliasKey_priv,
  uint32_t deviceIDCSR_len,
  uint8_t *deviceIDCSR_buf,
  uint32_t aliasKeyCRT_len,
  uint8_t *aliasKeyCRT_buf
);

#if defined(__cplusplus)
}
#endif

#define __L0_Core_H_DEFINED
#endif
