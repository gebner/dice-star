/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: krml -no-prefix Test1 test1.fst -skip-compilation -drop WasmSupport -tmpdir out
  F* version: <unknown>
  KreMLin version: 2f843633
 */

#include "kremlib.h"
#ifndef __C_Endianness_H
#define __C_Endianness_H




KRML_DEPRECATED("LowStar.Endianness.load128_le")

extern FStar_UInt128_uint128 load128_le(uint8_t *b);

KRML_DEPRECATED("LowStar.Endianness.store128_le")

extern void store128_le(uint8_t *b, FStar_UInt128_uint128 z);

KRML_DEPRECATED("LowStar.Endianness.load128_be")

extern FStar_UInt128_uint128 load128_be(uint8_t *b);

KRML_DEPRECATED("LowStar.Endianness.store128_be")

extern void store128_be(uint8_t *b, FStar_UInt128_uint128 z);

KRML_DEPRECATED("LowStar.Endianness.index_32_be")

uint32_t index_32_be(uint8_t *b, uint32_t i);

KRML_DEPRECATED("LowStar.Endianness.index_32_le")

uint32_t index_32_le(uint8_t *b, uint32_t i);

KRML_DEPRECATED("LowStar.Endianness.index_64_be")

uint64_t index_64_be(uint8_t *b, uint32_t i);

KRML_DEPRECATED("LowStar.Endianness.index_64_le")

uint64_t index_64_le(uint8_t *b, uint32_t i);

KRML_DEPRECATED("LowStar.Endianness.upd_32_be")

void upd_32_be(uint8_t *b, uint32_t i, uint32_t v1);

#define __C_Endianness_H_DEFINED
#endif
